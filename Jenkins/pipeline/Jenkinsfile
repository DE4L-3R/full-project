pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = 'redrayn/wargame'
    }
    
    stages {
        stage('Check Docker Image Update') {
            steps {
                script {
                    def imageInfo = sh(
                        script: """
                            curl -s "https://hub.docker.com/v2/repositories/${DOCKER_IMAGE}/tags/latest"
                        """,
                        returnStdout: true
                    )
                    
                    if (imageInfo.contains('digest')) {
                        env.UPDATE_REQUIRED = 'true'
                        echo "새로운 Docker 이미지가 감지되었습니다."
                    }
                }
            }
        }
        
        stage('Deploy Web Application') {
            when {
                environment name: 'UPDATE_REQUIRED', value: 'true'
            }
            steps {
                dir('Web') {
                    bat 'web-service.bat'
                }
            }
        }
    }
    
    post {
        success {
            echo '웹 애플리케이션이 성공적으로 배포되었습니다.'
        }
        failure {
            echo '배포 중 오류가 발생했습니다.'
        }
    }
}